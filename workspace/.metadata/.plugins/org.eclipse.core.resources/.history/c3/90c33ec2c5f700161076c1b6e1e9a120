
public class CircleLinkedList {
	Node first = new Node(1);
	Node current = first;
	Node last = first;

	public CircleLinkedList(int n) { // Constructs the circular doubly linked
										// list with N nodes
		for (int x = 2; x <= n; x++) {
			addItem(x);
		}
	}

	public void addItem(int inPol) { // adds an item to the end of the doubly
										// linked list
		Node temp = new Node(inPol);
		last.setNext(temp);
		temp.setPrev(last);
		temp.setNext(first); // Creates a circularly linked list
		last = temp;
		first.setPrev(last);
	}

	public void deleteItem(int pol) { // Deletes an item with the politician
										// value of the parameter
		if (first.getNext() != last) {
			while (pol != current.getPol()) {
				current = current.getNext();
			}
			current.getPrev().setNext(current.getNext());
			current.getNext().setPrev(current.getPrev());
		}else{
			first = null;
			last = null;
		}

	}
	
}
